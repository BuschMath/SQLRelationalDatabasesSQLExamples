/* --Tables can't be created because it tries to reference a table that's not be created yet.
create table Students(
	sid varchar(20),
	name varchar(30),
	login varchar(20),
	age int,
	honors varchar(10) not null,
	gpa float,
	primary key (sid),
	foreign key (honors) references Courses (cid)
);

create table Courses(
	cid varchar(10),
	cname varchar(10),
	credits int,
	grader varchar(20) not null,
	primary key (cid),
	foreign key (grader) references Students (sid)
);
*/

/*-- Adding the first foreign key after the second table is created avoids the problem.
create table Students(
	sid varchar(20),
	name varchar(30),
	login varchar(20),
	age int,
	honors varchar(10) not null,
	gpa float,
	primary key (sid)
);

create table Courses(
	cid varchar(10),
	cname varchar(10),
	credits int,
	grader varchar(20) not null,
	primary key (cid),
	foreign key (grader) references Students (sid)
);

alter table Students add foreign key (honors) references Courses (cid);
*/

/*-- Circular references are a challenge to deal with. Here we can't add a student because the honors/cid reference does not exist.
insert into Students values ('12345', 'Jane Doe', 'doe@iccc.cc.ia.us', 27, '54321', 3.21);
-- We also can't add a course because the student grader/sid reference does not exist.
insert into Courses values ('54321', 'English', 3, '12345');

-- The current way this is setup will not allow us to insert any values into either table. We need to have at least one of the references accept null values.
*/

/*-- The following will remove the non-null requirement from honors to allow for the insertion of a student, the student is added with null foreign reference in
-- honors, then a course is added, then the foreign reference is added into the student record.
alter table Students alter column honors varchar(10) null;

insert into Students values ('12345', 'Jane Doe', 'doe@iccc.cc.ia.us', 27, null, 3.21);
insert into Courses values ('54321', 'English', 3, '12345');
update Students set Students.honors='54321' where Students.sid='12345';
*/

/*-- Deleting the tables is also a problem because of the circular reference. We need to remove the key constraint. Because the key was unnamed, I have to find
-- the autogenerated name for the key.
alter table Students drop constraint FK__Students__honors__4CA06362;
*/

/*-- Now I can drop the tables, starting with Courses
drop table Courses;
drop table Students;
*/